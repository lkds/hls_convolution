// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Conv,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7a35tl-cpg236-2L,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.880000,HLS_SYN_LAT=78,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=36,HLS_SYN_FF=568,HLS_SYN_LUT=1109,HLS_VERSION=2019_2}" *)

module Conv (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        img_V_address0,
        img_V_ce0,
        img_V_q0,
        img_V_address1,
        img_V_ce1,
        img_V_q1,
        weight_V_address0,
        weight_V_ce0,
        weight_V_q0,
        weight_V_address1,
        weight_V_ce1,
        weight_V_q1,
        feature_V_address0,
        feature_V_ce0,
        feature_V_we0,
        feature_V_d0,
        feature_V_q0,
        feature_V_address1,
        feature_V_ce1,
        feature_V_we1,
        feature_V_d1,
        feature_V_q1
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_pp0_stage0 = 14'd2;
parameter    ap_ST_fsm_pp0_stage1 = 14'd4;
parameter    ap_ST_fsm_pp0_stage2 = 14'd8;
parameter    ap_ST_fsm_pp0_stage3 = 14'd16;
parameter    ap_ST_fsm_pp0_stage4 = 14'd32;
parameter    ap_ST_fsm_pp0_stage5 = 14'd64;
parameter    ap_ST_fsm_pp0_stage6 = 14'd128;
parameter    ap_ST_fsm_pp0_stage7 = 14'd256;
parameter    ap_ST_fsm_pp0_stage8 = 14'd512;
parameter    ap_ST_fsm_pp0_stage9 = 14'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 14'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 14'd4096;
parameter    ap_ST_fsm_state19 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] img_V_address0;
output   img_V_ce0;
input  [7:0] img_V_q0;
output  [2:0] img_V_address1;
output   img_V_ce1;
input  [7:0] img_V_q1;
output  [1:0] weight_V_address0;
output   weight_V_ce0;
input  [7:0] weight_V_q0;
output  [1:0] weight_V_address1;
output   weight_V_ce1;
input  [7:0] weight_V_q1;
output  [2:0] feature_V_address0;
output   feature_V_ce0;
output   feature_V_we0;
output  [7:0] feature_V_d0;
input  [7:0] feature_V_q0;
output  [2:0] feature_V_address1;
output   feature_V_ce1;
output   feature_V_we1;
output  [7:0] feature_V_d1;
input  [7:0] feature_V_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] img_V_address0;
reg img_V_ce0;
reg[2:0] img_V_address1;
reg img_V_ce1;
reg[1:0] weight_V_address0;
reg weight_V_ce0;
reg[1:0] weight_V_address1;
reg weight_V_ce1;
reg[2:0] feature_V_address0;
reg feature_V_ce0;
reg feature_V_we0;
reg[7:0] feature_V_d0;
reg[2:0] feature_V_address1;
reg feature_V_ce1;
reg feature_V_we1;
reg[7:0] feature_V_d1;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [2:0] p_0191_0_reg_427;
reg  signed [7:0] reg_470;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state15_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln887_reg_1305;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [7:0] grp_fu_438_p2;
reg   [7:0] reg_474;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state16_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_state18_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
reg  signed [7:0] reg_478;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
reg  signed [7:0] reg_483;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state14_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [7:0] grp_fu_444_p2;
reg   [7:0] reg_488;
reg   [7:0] reg_492;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_state17_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg  signed [7:0] reg_496;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [7:0] grp_fu_450_p2;
reg   [7:0] reg_501;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
reg  signed [7:0] reg_505;
wire   [7:0] grp_fu_455_p2;
reg   [7:0] reg_510;
reg  signed [7:0] reg_514;
reg  signed [7:0] reg_519;
wire   [7:0] grp_fu_460_p2;
reg   [7:0] reg_523;
wire   [7:0] grp_fu_465_p2;
reg   [7:0] reg_527;
wire   [0:0] icmp_ln887_fu_531_p2;
reg   [0:0] icmp_ln887_reg_1305_pp0_iter1_reg;
wire   [2:0] r_V_fu_537_p2;
reg   [2:0] r_V_reg_1309;
wire   [5:0] shl_ln_fu_543_p3;
reg   [5:0] shl_ln_reg_1315;
wire  signed [6:0] sub_ln214_fu_567_p2;
reg  signed [6:0] sub_ln214_reg_1320;
reg   [2:0] feature_V_addr_reg_1328;
reg   [2:0] feature_V_addr_reg_1328_pp0_iter1_reg;
wire   [4:0] trunc_ln_fu_586_p3;
reg   [4:0] trunc_ln_reg_1333;
wire   [2:0] add_ln1353_1_fu_618_p2;
reg   [2:0] add_ln1353_1_reg_1353;
wire   [1:0] trunc_ln21_4_fu_624_p1;
reg   [1:0] trunc_ln21_4_reg_1358;
reg   [2:0] feature_V_addr_1_reg_1363;
reg   [2:0] feature_V_addr_1_reg_1363_pp0_iter1_reg;
reg   [7:0] feature_V_load_reg_1368;
reg  signed [7:0] weight_V_load_2_reg_1373;
wire   [4:0] trunc_ln21_1_fu_642_p3;
reg   [4:0] trunc_ln21_1_reg_1379;
reg  signed [7:0] weight_V_load_3_reg_1388;
reg   [7:0] feature_V_load_1_reg_1408;
reg   [2:0] feature_V_addr_2_reg_1413;
reg   [2:0] feature_V_addr_3_reg_1418;
reg   [2:0] feature_V_addr_4_reg_1423;
reg   [2:0] feature_V_addr_4_reg_1423_pp0_iter1_reg;
reg   [2:0] feature_V_addr_5_reg_1428;
reg   [2:0] feature_V_addr_5_reg_1428_pp0_iter1_reg;
reg  signed [7:0] weight_V_load_4_reg_1433;
wire   [4:0] trunc_ln21_2_fu_728_p3;
reg   [4:0] trunc_ln21_2_reg_1439;
reg  signed [7:0] weight_V_load_7_reg_1453;
wire  signed [7:0] grp_fu_1019_p3;
reg  signed [7:0] add_ln700_1_reg_1464;
reg   [7:0] feature_V_load_3_reg_1469;
reg  signed [7:0] weight_V_load_reg_1474;
reg  signed [7:0] weight_V_load_8_reg_1483;
wire  signed [7:0] grp_fu_1026_p3;
reg  signed [7:0] add_ln700_18_reg_1503;
reg   [7:0] feature_V_load_5_reg_1508;
reg  signed [7:0] weight_V_load_1_reg_1513;
reg  signed [7:0] weight_V_load_5_reg_1523;
wire  signed [7:0] grp_fu_1034_p3;
reg  signed [7:0] add_ln700_4_reg_1532;
wire  signed [7:0] grp_fu_1042_p3;
reg  signed [7:0] add_ln700_5_reg_1537;
reg   [7:0] mul_ln700_22_reg_1552;
wire  signed [7:0] grp_fu_1049_p3;
reg  signed [7:0] add_ln700_27_reg_1557;
reg  signed [7:0] weight_V_load_6_reg_1562;
wire  signed [7:0] grp_fu_1055_p3;
reg  signed [7:0] add_ln700_11_reg_1572;
wire  signed [7:0] grp_fu_1069_p3;
reg  signed [7:0] add_ln700_36_reg_1587;
wire  signed [7:0] grp_fu_1076_p3;
reg  signed [7:0] add_ln700_13_reg_1592;
wire  signed [7:0] grp_fu_1083_p3;
reg  signed [7:0] add_ln700_15_reg_1597;
reg  signed [7:0] img_V_load_14_reg_1602;
(* use_dsp48 = "no" *) wire   [7:0] add_ln700_16_fu_837_p2;
reg   [7:0] add_ln700_16_reg_1618;
wire  signed [7:0] grp_fu_1097_p3;
reg  signed [7:0] add_ln700_20_reg_1623;
wire  signed [7:0] grp_fu_1111_p3;
reg  signed [7:0] add_ln700_45_reg_1638;
wire  signed [7:0] grp_fu_1117_p3;
reg  signed [7:0] add_ln700_22_reg_1643;
wire  signed [7:0] grp_fu_1123_p3;
reg  signed [7:0] add_ln700_24_reg_1648;
reg  signed [7:0] img_V_load_18_reg_1653;
wire  signed [7:0] grp_fu_1136_p3;
reg  signed [7:0] add_ln700_29_reg_1668;
wire  signed [7:0] grp_fu_1150_p3;
reg  signed [7:0] add_ln700_31_reg_1673;
reg   [7:0] mul_ln700_52_reg_1683;
wire  signed [7:0] grp_fu_1157_p3;
reg  signed [7:0] add_ln700_33_reg_1703;
wire  signed [7:0] grp_fu_1171_p3;
reg  signed [7:0] add_ln700_37_reg_1708;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire  signed [7:0] grp_fu_1178_p3;
reg  signed [7:0] add_ln700_reg_1718;
wire  signed [7:0] grp_fu_1184_p3;
reg  signed [7:0] add_ln700_2_reg_1723;
wire  signed [7:0] grp_fu_1190_p3;
reg  signed [7:0] add_ln700_9_reg_1728;
wire  signed [7:0] grp_fu_1196_p3;
reg  signed [7:0] add_ln700_6_reg_1738;
wire   [7:0] add_ln700_17_fu_971_p2;
reg   [7:0] add_ln700_17_reg_1743;
wire  signed [7:0] grp_fu_1202_p3;
reg  signed [7:0] add_ln700_38_reg_1748;
wire  signed [7:0] grp_fu_1208_p3;
reg  signed [7:0] add_ln700_40_reg_1753;
wire   [7:0] add_ln700_8_fu_984_p2;
reg   [7:0] add_ln700_8_reg_1758;
wire  signed [7:0] grp_fu_1215_p3;
reg  signed [7:0] add_ln700_42_reg_1763;
wire  signed [7:0] grp_fu_1228_p3;
reg  signed [7:0] add_ln700_46_reg_1768;
wire   [7:0] add_ln700_44_fu_998_p2;
reg   [7:0] add_ln700_44_reg_1773;
wire  signed [7:0] grp_fu_1235_p3;
reg  signed [7:0] add_ln700_47_reg_1778;
wire  signed [7:0] grp_fu_1240_p3;
reg  signed [7:0] add_ln700_49_reg_1783;
wire  signed [7:0] grp_fu_1247_p3;
reg  signed [7:0] add_ln700_51_reg_1788;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage4_subdone;
reg   [2:0] ap_phi_mux_p_0191_0_phi_fu_431_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln559_fu_577_p1;
wire   [63:0] zext_ln22_1_fu_600_p1;
wire   [63:0] zext_ln559_2_fu_613_p1;
wire   [63:0] zext_ln559_4_fu_634_p1;
wire   [63:0] zext_ln22_2_fu_656_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln22_3_fu_667_p1;
wire   [63:0] zext_ln559_5_fu_681_p1;
wire   [63:0] zext_ln559_6_fu_695_p1;
wire   [63:0] zext_ln559_7_fu_709_p1;
wire   [63:0] zext_ln559_8_fu_723_p1;
wire   [63:0] zext_ln22_4_fu_741_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln22_5_fu_752_p1;
wire   [63:0] zext_ln22_6_fu_762_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln22_7_fu_772_p1;
wire   [63:0] zext_ln22_8_fu_782_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln22_9_fu_792_p1;
wire   [63:0] zext_ln22_10_fu_802_p1;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln22_11_fu_812_p1;
wire   [63:0] zext_ln22_12_fu_822_p1;
wire    ap_block_pp0_stage6;
wire   [63:0] zext_ln22_13_fu_832_p1;
wire   [63:0] zext_ln22_14_fu_846_p1;
wire    ap_block_pp0_stage7;
wire   [63:0] zext_ln22_15_fu_856_p1;
wire   [63:0] zext_ln22_16_fu_866_p1;
wire    ap_block_pp0_stage8;
wire   [63:0] zext_ln22_17_fu_876_p1;
wire   [63:0] zext_ln22_18_fu_901_p1;
wire    ap_block_pp0_stage9;
wire   [63:0] zext_ln22_20_fu_911_p1;
wire   [63:0] zext_ln559_1_fu_916_p1;
wire    ap_block_pp0_stage10;
wire   [63:0] zext_ln22_fu_925_p1;
wire   [63:0] zext_ln559_3_fu_937_p1;
wire    ap_block_pp0_stage11;
wire   [63:0] zext_ln22_19_fu_962_p1;
wire   [7:0] add_ln700_26_fu_889_p2;
wire   [7:0] add_ln700_35_fu_950_p2;
wire   [7:0] add_ln700_53_fu_1012_p2;
reg  signed [7:0] grp_fu_438_p0;
wire  signed [7:0] grp_fu_438_p1;
reg  signed [7:0] grp_fu_444_p0;
wire  signed [7:0] grp_fu_444_p1;
wire  signed [7:0] grp_fu_450_p1;
wire  signed [7:0] grp_fu_455_p1;
wire  signed [7:0] grp_fu_460_p1;
wire  signed [7:0] grp_fu_465_p1;
wire   [3:0] shl_ln214_1_fu_555_p3;
wire   [6:0] zext_ln214_fu_551_p1;
wire   [6:0] zext_ln214_1_fu_563_p1;
wire  signed [7:0] sext_ln214_fu_573_p1;
wire   [1:0] trunc_ln21_fu_582_p1;
wire   [4:0] or_ln22_1_fu_594_p2;
wire   [5:0] shl_ln1352_1_fu_605_p3;
wire   [7:0] or_ln214_fu_628_p2;
wire   [1:0] trunc_ln21_3_fu_639_p1;
wire   [4:0] or_ln22_2_fu_650_p2;
wire   [4:0] or_ln22_3_fu_661_p2;
wire   [6:0] add_ln214_fu_672_p2;
wire  signed [7:0] sext_ln214_1_fu_677_p1;
wire   [6:0] add_ln214_1_fu_686_p2;
wire  signed [7:0] sext_ln214_2_fu_691_p1;
wire   [6:0] add_ln214_2_fu_700_p2;
wire  signed [7:0] sext_ln214_3_fu_705_p1;
wire   [6:0] add_ln214_3_fu_714_p2;
wire  signed [7:0] sext_ln214_4_fu_719_p1;
wire   [4:0] or_ln22_4_fu_735_p2;
wire   [4:0] or_ln22_5_fu_746_p2;
wire   [4:0] or_ln22_6_fu_757_p2;
wire   [4:0] or_ln22_7_fu_767_p2;
wire   [4:0] or_ln22_8_fu_777_p2;
wire   [4:0] or_ln22_9_fu_787_p2;
wire   [4:0] or_ln22_10_fu_797_p2;
wire   [4:0] or_ln22_11_fu_807_p2;
wire   [4:0] or_ln22_12_fu_817_p2;
wire   [4:0] or_ln22_13_fu_827_p2;
wire   [4:0] or_ln22_14_fu_841_p2;
wire   [4:0] or_ln22_15_fu_851_p2;
wire   [4:0] or_ln22_16_fu_861_p2;
wire   [4:0] or_ln22_17_fu_871_p2;
(* use_dsp48 = "no" *) wire   [7:0] add_ln700_25_fu_885_p2;
(* use_dsp48 = "no" *) wire   [7:0] add_ln700_21_fu_881_p2;
wire   [4:0] or_ln22_18_fu_896_p2;
wire   [4:0] or_ln22_20_fu_906_p2;
wire   [4:0] or_ln22_fu_920_p2;
wire   [5:0] shl_ln1352_2_fu_930_p3;
(* use_dsp48 = "no" *) wire   [7:0] add_ln700_34_fu_946_p2;
(* use_dsp48 = "no" *) wire   [7:0] add_ln700_30_fu_942_p2;
wire   [4:0] or_ln22_19_fu_957_p2;
(* use_dsp48 = "no" *) wire   [7:0] add_ln700_12_fu_967_p2;
(* use_dsp48 = "no" *) wire   [7:0] add_ln700_7_fu_980_p2;
(* use_dsp48 = "no" *) wire   [7:0] add_ln700_3_fu_976_p2;
(* use_dsp48 = "no" *) wire   [7:0] add_ln700_43_fu_994_p2;
(* use_dsp48 = "no" *) wire   [7:0] add_ln700_39_fu_990_p2;
(* use_dsp48 = "no" *) wire   [7:0] add_ln700_52_fu_1008_p2;
(* use_dsp48 = "no" *) wire   [7:0] add_ln700_48_fu_1004_p2;
wire  signed [7:0] grp_fu_1061_p3;
wire  signed [7:0] grp_fu_1089_p3;
wire  signed [7:0] grp_fu_1103_p3;
wire  signed [7:0] grp_fu_1129_p3;
wire  signed [7:0] grp_fu_1142_p3;
wire  signed [7:0] grp_fu_1163_p3;
wire  signed [7:0] grp_fu_1220_p3;
wire  signed [7:0] grp_fu_1253_p3;
wire    ap_CS_fsm_state19;
reg   [13:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U1(
    .din0(weight_V_load_3_reg_1388),
    .din1(reg_478),
    .din2(reg_474),
    .dout(grp_fu_1019_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U2(
    .din0(weight_V_q0),
    .din1(reg_470),
    .din2(reg_492),
    .dout(grp_fu_1026_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U3(
    .din0(weight_V_q1),
    .din1(reg_483),
    .din2(reg_474),
    .dout(grp_fu_1034_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U4(
    .din0(weight_V_load_8_reg_1483),
    .din1(reg_505),
    .din2(reg_501),
    .dout(grp_fu_1042_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U5(
    .din0(weight_V_load_reg_1474),
    .din1(img_V_q0),
    .din2(feature_V_load_3_reg_1469),
    .dout(grp_fu_1049_p3)
);

Conv_mac_muladd_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8cud_U6(
    .din0(weight_V_load_1_reg_1513),
    .din1(reg_470),
    .din2(grp_fu_1061_p3),
    .dout(grp_fu_1055_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U7(
    .din0(weight_V_load_3_reg_1388),
    .din1(reg_478),
    .din2(reg_474),
    .dout(grp_fu_1061_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U8(
    .din0(weight_V_load_reg_1474),
    .din1(img_V_q1),
    .din2(reg_492),
    .dout(grp_fu_1069_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U9(
    .din0(weight_V_load_5_reg_1523),
    .din1(reg_519),
    .din2(reg_488),
    .dout(grp_fu_1076_p3)
);

Conv_mac_muladd_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8cud_U10(
    .din0(weight_V_load_6_reg_1562),
    .din1(reg_496),
    .din2(grp_fu_1089_p3),
    .dout(grp_fu_1083_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U11(
    .din0(weight_V_load_8_reg_1483),
    .din1(reg_470),
    .din2(reg_510),
    .dout(grp_fu_1089_p3)
);

Conv_mac_muladd_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8cud_U12(
    .din0(weight_V_load_1_reg_1513),
    .din1(reg_514),
    .din2(grp_fu_1103_p3),
    .dout(grp_fu_1097_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U13(
    .din0(weight_V_load_3_reg_1388),
    .din1(reg_483),
    .din2(reg_523),
    .dout(grp_fu_1103_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U14(
    .din0(weight_V_load_reg_1474),
    .din1(img_V_q0),
    .din2(feature_V_load_5_reg_1508),
    .dout(grp_fu_1111_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U15(
    .din0(weight_V_load_5_reg_1523),
    .din1(reg_496),
    .din2(mul_ln700_22_reg_1552),
    .dout(grp_fu_1117_p3)
);

Conv_mac_muladd_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8cud_U16(
    .din0(weight_V_load_6_reg_1562),
    .din1(reg_505),
    .din2(grp_fu_1129_p3),
    .dout(grp_fu_1123_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U17(
    .din0(weight_V_load_8_reg_1483),
    .din1(img_V_load_14_reg_1602),
    .din2(reg_501),
    .dout(grp_fu_1129_p3)
);

Conv_mac_muladd_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8cud_U18(
    .din0(weight_V_load_1_reg_1513),
    .din1(reg_478),
    .din2(grp_fu_1142_p3),
    .dout(grp_fu_1136_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U19(
    .din0(weight_V_load_3_reg_1388),
    .din1(reg_519),
    .din2(reg_474),
    .dout(grp_fu_1142_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U20(
    .din0(weight_V_load_5_reg_1523),
    .din1(reg_514),
    .din2(reg_527),
    .dout(grp_fu_1150_p3)
);

Conv_mac_muladd_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8cud_U21(
    .din0(weight_V_load_6_reg_1562),
    .din1(reg_470),
    .din2(grp_fu_1163_p3),
    .dout(grp_fu_1157_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U22(
    .din0(weight_V_load_8_reg_1483),
    .din1(reg_505),
    .din2(reg_510),
    .dout(grp_fu_1163_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U23(
    .din0(weight_V_load_3_reg_1388),
    .din1(reg_496),
    .din2(reg_523),
    .dout(grp_fu_1171_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U24(
    .din0(weight_V_load_reg_1474),
    .din1(img_V_q0),
    .din2(feature_V_load_reg_1368),
    .dout(grp_fu_1178_p3)
);

Conv_mac_muladd_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8cud_U25(
    .din0(weight_V_load_1_reg_1513),
    .din1(img_V_q1),
    .din2(add_ln700_1_reg_1464),
    .dout(grp_fu_1184_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U26(
    .din0(weight_V_load_reg_1474),
    .din1(img_V_q1),
    .din2(feature_V_load_1_reg_1408),
    .dout(grp_fu_1190_p3)
);

Conv_mac_muladd_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8cud_U27(
    .din0(weight_V_load_6_reg_1562),
    .din1(img_V_q0),
    .din2(add_ln700_5_reg_1537),
    .dout(grp_fu_1196_p3)
);

Conv_mac_muladd_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8cud_U28(
    .din0(weight_V_load_1_reg_1513),
    .din1(reg_483),
    .din2(add_ln700_37_reg_1708),
    .dout(grp_fu_1202_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U29(
    .din0(weight_V_load_5_reg_1523),
    .din1(reg_478),
    .din2(reg_488),
    .dout(grp_fu_1208_p3)
);

Conv_mac_muladd_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8cud_U30(
    .din0(weight_V_load_6_reg_1562),
    .din1(img_V_load_14_reg_1602),
    .din2(grp_fu_1220_p3),
    .dout(grp_fu_1215_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U31(
    .din0(weight_V_load_8_reg_1483),
    .din1(reg_519),
    .din2(reg_501),
    .dout(grp_fu_1220_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U32(
    .din0(weight_V_load_3_reg_1388),
    .din1(reg_514),
    .din2(reg_474),
    .dout(grp_fu_1228_p3)
);

Conv_mac_muladd_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8cud_U33(
    .din0(weight_V_load_1_reg_1513),
    .din1(img_V_load_18_reg_1653),
    .din2(add_ln700_46_reg_1768),
    .dout(grp_fu_1235_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U34(
    .din0(weight_V_load_5_reg_1523),
    .din1(reg_483),
    .din2(reg_527),
    .dout(grp_fu_1240_p3)
);

Conv_mac_muladd_8cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8cud_U35(
    .din0(weight_V_load_6_reg_1562),
    .din1(reg_505),
    .din2(grp_fu_1253_p3),
    .dout(grp_fu_1247_p3)
);

Conv_mac_muladd_8bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
Conv_mac_muladd_8bkb_U36(
    .din0(weight_V_load_8_reg_1483),
    .din1(reg_496),
    .din2(mul_ln700_52_reg_1683),
    .dout(grp_fu_1253_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage11_subdone) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_0191_0_reg_427 <= r_V_reg_1309;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        p_0191_0_reg_427 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_478 <= img_V_q0;
    end else if ((((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln887_reg_1305 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_478 <= img_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        reg_483 <= img_V_q0;
    end else if ((((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_483 <= img_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        reg_496 <= img_V_q1;
    end else if ((((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_496 <= img_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if (((1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            reg_505 <= img_V_q0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            reg_505 <= img_V_q1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
            reg_514 <= img_V_q1;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
            reg_514 <= img_V_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_fu_531_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln1353_1_reg_1353 <= add_ln1353_1_fu_618_p2;
        feature_V_addr_1_reg_1363[2 : 1] <= zext_ln559_4_fu_634_p1[2 : 1];
        feature_V_addr_reg_1328[2 : 1] <= zext_ln559_fu_577_p1[2 : 1];
        shl_ln_reg_1315[5 : 3] <= shl_ln_fu_543_p3[5 : 3];
        sub_ln214_reg_1320[6 : 1] <= sub_ln214_fu_567_p2[6 : 1];
        trunc_ln21_4_reg_1358 <= trunc_ln21_4_fu_624_p1;
        trunc_ln_reg_1333[4 : 3] <= trunc_ln_fu_586_p3[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln887_reg_1305 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add_ln700_11_reg_1572 <= grp_fu_1055_p3;
        add_ln700_36_reg_1587 <= grp_fu_1069_p3;
        weight_V_load_6_reg_1562 <= weight_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        add_ln700_13_reg_1592 <= grp_fu_1076_p3;
        add_ln700_15_reg_1597 <= grp_fu_1083_p3;
        img_V_load_14_reg_1602 <= img_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        add_ln700_16_reg_1618 <= add_ln700_16_fu_837_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln700_17_reg_1743 <= add_ln700_17_fu_971_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add_ln700_18_reg_1503 <= grp_fu_1026_p3;
        feature_V_load_5_reg_1508 <= feature_V_q1;
        weight_V_load_8_reg_1483 <= weight_V_q1;
        weight_V_load_reg_1474 <= weight_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln700_1_reg_1464 <= grp_fu_1019_p3;
        feature_V_load_3_reg_1469 <= feature_V_q1;
        weight_V_load_4_reg_1433 <= weight_V_q0;
        weight_V_load_7_reg_1453 <= weight_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        add_ln700_20_reg_1623 <= grp_fu_1097_p3;
        add_ln700_45_reg_1638 <= grp_fu_1111_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
        add_ln700_22_reg_1643 <= grp_fu_1117_p3;
        add_ln700_24_reg_1648 <= grp_fu_1123_p3;
        img_V_load_18_reg_1653 <= img_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln700_27_reg_1557 <= grp_fu_1049_p3;
        add_ln700_4_reg_1532 <= grp_fu_1034_p3;
        add_ln700_5_reg_1537 <= grp_fu_1042_p3;
        mul_ln700_22_reg_1552 <= grp_fu_444_p2;
        weight_V_load_1_reg_1513 <= weight_V_q0;
        weight_V_load_5_reg_1523 <= weight_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001))) begin
        add_ln700_29_reg_1668 <= grp_fu_1136_p3;
        add_ln700_31_reg_1673 <= grp_fu_1150_p3;
        mul_ln700_52_reg_1683 <= grp_fu_455_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        add_ln700_2_reg_1723 <= grp_fu_1184_p3;
        add_ln700_9_reg_1728 <= grp_fu_1190_p3;
        add_ln700_reg_1718 <= grp_fu_1178_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        add_ln700_33_reg_1703 <= grp_fu_1157_p3;
        add_ln700_37_reg_1708 <= grp_fu_1171_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln700_38_reg_1748 <= grp_fu_1202_p3;
        add_ln700_40_reg_1753 <= grp_fu_1208_p3;
        add_ln700_6_reg_1738 <= grp_fu_1196_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        add_ln700_42_reg_1763 <= grp_fu_1215_p3;
        add_ln700_46_reg_1768 <= grp_fu_1228_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln700_44_reg_1773 <= add_ln700_44_fu_998_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln700_47_reg_1778 <= grp_fu_1235_p3;
        add_ln700_49_reg_1783 <= grp_fu_1240_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        add_ln700_51_reg_1788 <= grp_fu_1247_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln700_8_reg_1758 <= add_ln700_8_fu_984_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        feature_V_addr_1_reg_1363_pp0_iter1_reg[2 : 1] <= feature_V_addr_1_reg_1363[2 : 1];
        feature_V_addr_reg_1328_pp0_iter1_reg[2 : 1] <= feature_V_addr_reg_1328[2 : 1];
        icmp_ln887_reg_1305 <= icmp_ln887_fu_531_p2;
        icmp_ln887_reg_1305_pp0_iter1_reg <= icmp_ln887_reg_1305;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        feature_V_addr_2_reg_1413[2 : 1] <= zext_ln559_5_fu_681_p1[2 : 1];
        feature_V_addr_3_reg_1418[2 : 1] <= zext_ln559_6_fu_695_p1[2 : 1];
        feature_V_addr_4_reg_1423[2 : 1] <= zext_ln559_7_fu_709_p1[2 : 1];
        feature_V_addr_5_reg_1428[2 : 1] <= zext_ln559_8_fu_723_p1[2 : 1];
        trunc_ln21_1_reg_1379[4 : 3] <= trunc_ln21_1_fu_642_p3[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        feature_V_addr_4_reg_1423_pp0_iter1_reg[2 : 1] <= feature_V_addr_4_reg_1423[2 : 1];
        feature_V_addr_5_reg_1428_pp0_iter1_reg[2 : 1] <= feature_V_addr_5_reg_1428[2 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        feature_V_load_1_reg_1408 <= feature_V_q1;
        feature_V_load_reg_1368 <= feature_V_q0;
        weight_V_load_2_reg_1373 <= weight_V_q0;
        weight_V_load_3_reg_1388 <= weight_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        r_V_reg_1309 <= r_V_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln887_reg_1305 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_470 <= img_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_474 <= grp_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_488 <= grp_fu_444_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        reg_492 <= feature_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln887_reg_1305 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_501 <= grp_fu_450_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        reg_510 <= grp_fu_455_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        reg_519 <= img_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln887_reg_1305 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)))) begin
        reg_523 <= grp_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        reg_527 <= grp_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        trunc_ln21_2_reg_1439[4 : 3] <= trunc_ln21_2_fu_728_p3[4 : 3];
    end
end

always @ (*) begin
    if ((icmp_ln887_fu_531_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_p_0191_0_phi_fu_431_p4 = r_V_reg_1309;
    end else begin
        ap_phi_mux_p_0191_0_phi_fu_431_p4 = p_0191_0_reg_427;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        feature_V_address0 = feature_V_addr_4_reg_1423_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        feature_V_address0 = feature_V_addr_reg_1328_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        feature_V_address0 = feature_V_addr_2_reg_1413;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        feature_V_address0 = feature_V_addr_4_reg_1423;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        feature_V_address0 = zext_ln559_5_fu_681_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        feature_V_address0 = zext_ln559_fu_577_p1;
    end else begin
        feature_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        feature_V_address1 = feature_V_addr_5_reg_1428_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        feature_V_address1 = feature_V_addr_1_reg_1363_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        feature_V_address1 = feature_V_addr_3_reg_1418;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        feature_V_address1 = feature_V_addr_5_reg_1428;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        feature_V_address1 = zext_ln559_6_fu_695_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        feature_V_address1 = zext_ln559_4_fu_634_p1;
    end else begin
        feature_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        feature_V_ce0 = 1'b1;
    end else begin
        feature_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        feature_V_ce1 = 1'b1;
    end else begin
        feature_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        feature_V_d0 = add_ln700_44_reg_1773;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        feature_V_d0 = add_ln700_8_reg_1758;
    end else if (((1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
        feature_V_d0 = add_ln700_26_fu_889_p2;
    end else begin
        feature_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        feature_V_d1 = add_ln700_53_fu_1012_p2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        feature_V_d1 = add_ln700_17_reg_1743;
    end else if (((1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
        feature_V_d1 = add_ln700_35_fu_950_p2;
    end else begin
        feature_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1305 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((icmp_ln887_reg_1305_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln887_reg_1305_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        feature_V_we0 = 1'b1;
    end else begin
        feature_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln887_reg_1305 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln887_reg_1305_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((icmp_ln887_reg_1305_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)))) begin
        feature_V_we1 = 1'b1;
    end else begin
        feature_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_438_p0 = weight_V_load_2_reg_1373;
    end else if ((((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_438_p0 = weight_V_q0;
    end else begin
        grp_fu_438_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_444_p0 = weight_V_load_4_reg_1433;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_444_p0 = weight_V_q0;
    end else begin
        grp_fu_444_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            img_V_address0 = zext_ln559_3_fu_937_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            img_V_address0 = zext_ln559_1_fu_916_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            img_V_address0 = zext_ln22_18_fu_901_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            img_V_address0 = zext_ln22_16_fu_866_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            img_V_address0 = zext_ln22_14_fu_846_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            img_V_address0 = zext_ln22_12_fu_822_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            img_V_address0 = zext_ln22_10_fu_802_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            img_V_address0 = zext_ln22_8_fu_782_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            img_V_address0 = zext_ln22_6_fu_762_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            img_V_address0 = zext_ln22_4_fu_741_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            img_V_address0 = zext_ln22_2_fu_656_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            img_V_address0 = zext_ln22_1_fu_600_p1;
        end else begin
            img_V_address0 = 'bx;
        end
    end else begin
        img_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11))) begin
            img_V_address1 = zext_ln22_19_fu_962_p1;
        end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10))) begin
            img_V_address1 = zext_ln22_fu_925_p1;
        end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9))) begin
            img_V_address1 = zext_ln22_20_fu_911_p1;
        end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8))) begin
            img_V_address1 = zext_ln22_17_fu_876_p1;
        end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            img_V_address1 = zext_ln22_15_fu_856_p1;
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            img_V_address1 = zext_ln22_13_fu_832_p1;
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            img_V_address1 = zext_ln22_11_fu_812_p1;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            img_V_address1 = zext_ln22_9_fu_792_p1;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            img_V_address1 = zext_ln22_7_fu_772_p1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            img_V_address1 = zext_ln22_5_fu_752_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            img_V_address1 = zext_ln22_3_fu_667_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            img_V_address1 = zext_ln559_2_fu_613_p1;
        end else begin
            img_V_address1 = 'bx;
        end
    end else begin
        img_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_V_ce0 = 1'b1;
    end else begin
        img_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        img_V_ce1 = 1'b1;
    end else begin
        img_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            weight_V_address0 = 64'd6;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            weight_V_address0 = 64'd1;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            weight_V_address0 = 64'd0;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weight_V_address0 = 64'd4;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weight_V_address0 = 64'd2;
        end else begin
            weight_V_address0 = 'bx;
        end
    end else begin
        weight_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            weight_V_address1 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            weight_V_address1 = 64'd8;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            weight_V_address1 = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            weight_V_address1 = 64'd3;
        end else begin
            weight_V_address1 = 'bx;
        end
    end else begin
        weight_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        weight_V_ce0 = 1'b1;
    end else begin
        weight_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        weight_V_ce1 = 1'b1;
    end else begin
        weight_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln887_fu_531_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln887_fu_531_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) & (1'b0 == ap_block_pp0_stage4_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1353_1_fu_618_p2 = (3'd2 + ap_phi_mux_p_0191_0_phi_fu_431_p4);

assign add_ln214_1_fu_686_p2 = ($signed(7'd3) + $signed(sub_ln214_reg_1320));

assign add_ln214_2_fu_700_p2 = ($signed(7'd4) + $signed(sub_ln214_reg_1320));

assign add_ln214_3_fu_714_p2 = ($signed(7'd5) + $signed(sub_ln214_reg_1320));

assign add_ln214_fu_672_p2 = ($signed(7'd2) + $signed(sub_ln214_reg_1320));

assign add_ln700_12_fu_967_p2 = ($signed(add_ln700_11_reg_1572) + $signed(add_ln700_9_reg_1728));

assign add_ln700_16_fu_837_p2 = ($signed(add_ln700_15_reg_1597) + $signed(add_ln700_13_reg_1592));

assign add_ln700_17_fu_971_p2 = (add_ln700_16_reg_1618 + add_ln700_12_fu_967_p2);

assign add_ln700_21_fu_881_p2 = ($signed(add_ln700_20_reg_1623) + $signed(add_ln700_18_reg_1503));

assign add_ln700_25_fu_885_p2 = ($signed(add_ln700_24_reg_1648) + $signed(add_ln700_22_reg_1643));

assign add_ln700_26_fu_889_p2 = (add_ln700_25_fu_885_p2 + add_ln700_21_fu_881_p2);

assign add_ln700_30_fu_942_p2 = ($signed(add_ln700_29_reg_1668) + $signed(add_ln700_27_reg_1557));

assign add_ln700_34_fu_946_p2 = ($signed(add_ln700_33_reg_1703) + $signed(add_ln700_31_reg_1673));

assign add_ln700_35_fu_950_p2 = (add_ln700_34_fu_946_p2 + add_ln700_30_fu_942_p2);

assign add_ln700_39_fu_990_p2 = ($signed(add_ln700_38_reg_1748) + $signed(add_ln700_36_reg_1587));

assign add_ln700_3_fu_976_p2 = ($signed(add_ln700_2_reg_1723) + $signed(add_ln700_reg_1718));

assign add_ln700_43_fu_994_p2 = ($signed(add_ln700_42_reg_1763) + $signed(add_ln700_40_reg_1753));

assign add_ln700_44_fu_998_p2 = (add_ln700_43_fu_994_p2 + add_ln700_39_fu_990_p2);

assign add_ln700_48_fu_1004_p2 = ($signed(add_ln700_47_reg_1778) + $signed(add_ln700_45_reg_1638));

assign add_ln700_52_fu_1008_p2 = ($signed(add_ln700_51_reg_1788) + $signed(add_ln700_49_reg_1783));

assign add_ln700_53_fu_1012_p2 = (add_ln700_52_fu_1008_p2 + add_ln700_48_fu_1004_p2);

assign add_ln700_7_fu_980_p2 = ($signed(add_ln700_6_reg_1738) + $signed(add_ln700_4_reg_1532));

assign add_ln700_8_fu_984_p2 = (add_ln700_7_fu_980_p2 + add_ln700_3_fu_976_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd13];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_438_p1 = img_V_q0;

assign grp_fu_438_p2 = ($signed(grp_fu_438_p0) * $signed(grp_fu_438_p1));

assign grp_fu_444_p1 = img_V_q1;

assign grp_fu_444_p2 = ($signed(grp_fu_444_p0) * $signed(grp_fu_444_p1));

assign grp_fu_450_p1 = img_V_q0;

assign grp_fu_450_p2 = ($signed(weight_V_load_7_reg_1453) * $signed(grp_fu_450_p1));

assign grp_fu_455_p1 = img_V_q1;

assign grp_fu_455_p2 = ($signed(weight_V_load_7_reg_1453) * $signed(grp_fu_455_p1));

assign grp_fu_460_p1 = img_V_q1;

assign grp_fu_460_p2 = ($signed(weight_V_load_2_reg_1373) * $signed(grp_fu_460_p1));

assign grp_fu_465_p1 = img_V_q0;

assign grp_fu_465_p2 = ($signed(weight_V_load_4_reg_1433) * $signed(grp_fu_465_p1));

assign icmp_ln887_fu_531_p2 = ((ap_phi_mux_p_0191_0_phi_fu_431_p4 == 3'd6) ? 1'b1 : 1'b0);

assign or_ln214_fu_628_p2 = (sext_ln214_fu_573_p1 | 8'd1);

assign or_ln22_10_fu_797_p2 = (trunc_ln21_1_reg_1379 | 5'd4);

assign or_ln22_11_fu_807_p2 = (trunc_ln21_2_reg_1439 | 5'd4);

assign or_ln22_12_fu_817_p2 = (trunc_ln_reg_1333 | 5'd5);

assign or_ln22_13_fu_827_p2 = (trunc_ln21_1_reg_1379 | 5'd5);

assign or_ln22_14_fu_841_p2 = (trunc_ln21_2_reg_1439 | 5'd5);

assign or_ln22_15_fu_851_p2 = (trunc_ln_reg_1333 | 5'd6);

assign or_ln22_16_fu_861_p2 = (trunc_ln21_1_reg_1379 | 5'd6);

assign or_ln22_17_fu_871_p2 = (trunc_ln21_2_reg_1439 | 5'd6);

assign or_ln22_18_fu_896_p2 = (trunc_ln_reg_1333 | 5'd7);

assign or_ln22_19_fu_957_p2 = (trunc_ln21_1_reg_1379 | 5'd7);

assign or_ln22_1_fu_594_p2 = (trunc_ln_fu_586_p3 | 5'd2);

assign or_ln22_20_fu_906_p2 = (trunc_ln21_2_reg_1439 | 5'd7);

assign or_ln22_2_fu_650_p2 = (trunc_ln21_1_fu_642_p3 | 5'd1);

assign or_ln22_3_fu_661_p2 = (trunc_ln21_1_fu_642_p3 | 5'd2);

assign or_ln22_4_fu_735_p2 = (trunc_ln21_2_fu_728_p3 | 5'd1);

assign or_ln22_5_fu_746_p2 = (trunc_ln21_2_fu_728_p3 | 5'd2);

assign or_ln22_6_fu_757_p2 = (trunc_ln_reg_1333 | 5'd3);

assign or_ln22_7_fu_767_p2 = (trunc_ln21_1_reg_1379 | 5'd3);

assign or_ln22_8_fu_777_p2 = (trunc_ln21_2_reg_1439 | 5'd3);

assign or_ln22_9_fu_787_p2 = (trunc_ln_reg_1333 | 5'd4);

assign or_ln22_fu_920_p2 = (trunc_ln_reg_1333 | 5'd1);

assign r_V_fu_537_p2 = (ap_phi_mux_p_0191_0_phi_fu_431_p4 + 3'd1);

assign sext_ln214_1_fu_677_p1 = $signed(add_ln214_fu_672_p2);

assign sext_ln214_2_fu_691_p1 = $signed(add_ln214_1_fu_686_p2);

assign sext_ln214_3_fu_705_p1 = $signed(add_ln214_2_fu_700_p2);

assign sext_ln214_4_fu_719_p1 = $signed(add_ln214_3_fu_714_p2);

assign sext_ln214_fu_573_p1 = sub_ln214_fu_567_p2;

assign shl_ln1352_1_fu_605_p3 = {{r_V_fu_537_p2}, {3'd0}};

assign shl_ln1352_2_fu_930_p3 = {{add_ln1353_1_reg_1353}, {3'd0}};

assign shl_ln214_1_fu_555_p3 = {{ap_phi_mux_p_0191_0_phi_fu_431_p4}, {1'd0}};

assign shl_ln_fu_543_p3 = {{ap_phi_mux_p_0191_0_phi_fu_431_p4}, {3'd0}};

assign sub_ln214_fu_567_p2 = (zext_ln214_fu_551_p1 - zext_ln214_1_fu_563_p1);

assign trunc_ln21_1_fu_642_p3 = {{trunc_ln21_3_fu_639_p1}, {3'd0}};

assign trunc_ln21_2_fu_728_p3 = {{trunc_ln21_4_reg_1358}, {3'd0}};

assign trunc_ln21_3_fu_639_p1 = r_V_reg_1309[1:0];

assign trunc_ln21_4_fu_624_p1 = add_ln1353_1_fu_618_p2[1:0];

assign trunc_ln21_fu_582_p1 = ap_phi_mux_p_0191_0_phi_fu_431_p4[1:0];

assign trunc_ln_fu_586_p3 = {{trunc_ln21_fu_582_p1}, {3'd0}};

assign zext_ln214_1_fu_563_p1 = shl_ln214_1_fu_555_p3;

assign zext_ln214_fu_551_p1 = shl_ln_fu_543_p3;

assign zext_ln22_10_fu_802_p1 = or_ln22_10_fu_797_p2;

assign zext_ln22_11_fu_812_p1 = or_ln22_11_fu_807_p2;

assign zext_ln22_12_fu_822_p1 = or_ln22_12_fu_817_p2;

assign zext_ln22_13_fu_832_p1 = or_ln22_13_fu_827_p2;

assign zext_ln22_14_fu_846_p1 = or_ln22_14_fu_841_p2;

assign zext_ln22_15_fu_856_p1 = or_ln22_15_fu_851_p2;

assign zext_ln22_16_fu_866_p1 = or_ln22_16_fu_861_p2;

assign zext_ln22_17_fu_876_p1 = or_ln22_17_fu_871_p2;

assign zext_ln22_18_fu_901_p1 = or_ln22_18_fu_896_p2;

assign zext_ln22_19_fu_962_p1 = or_ln22_19_fu_957_p2;

assign zext_ln22_1_fu_600_p1 = or_ln22_1_fu_594_p2;

assign zext_ln22_20_fu_911_p1 = or_ln22_20_fu_906_p2;

assign zext_ln22_2_fu_656_p1 = or_ln22_2_fu_650_p2;

assign zext_ln22_3_fu_667_p1 = or_ln22_3_fu_661_p2;

assign zext_ln22_4_fu_741_p1 = or_ln22_4_fu_735_p2;

assign zext_ln22_5_fu_752_p1 = or_ln22_5_fu_746_p2;

assign zext_ln22_6_fu_762_p1 = or_ln22_6_fu_757_p2;

assign zext_ln22_7_fu_772_p1 = or_ln22_7_fu_767_p2;

assign zext_ln22_8_fu_782_p1 = or_ln22_8_fu_777_p2;

assign zext_ln22_9_fu_792_p1 = or_ln22_9_fu_787_p2;

assign zext_ln22_fu_925_p1 = or_ln22_fu_920_p2;

assign zext_ln559_1_fu_916_p1 = shl_ln_reg_1315;

assign zext_ln559_2_fu_613_p1 = shl_ln1352_1_fu_605_p3;

assign zext_ln559_3_fu_937_p1 = shl_ln1352_2_fu_930_p3;

assign zext_ln559_4_fu_634_p1 = or_ln214_fu_628_p2;

assign zext_ln559_5_fu_681_p1 = $unsigned(sext_ln214_1_fu_677_p1);

assign zext_ln559_6_fu_695_p1 = $unsigned(sext_ln214_2_fu_691_p1);

assign zext_ln559_7_fu_709_p1 = $unsigned(sext_ln214_3_fu_705_p1);

assign zext_ln559_8_fu_723_p1 = $unsigned(sext_ln214_4_fu_719_p1);

assign zext_ln559_fu_577_p1 = $unsigned(sext_ln214_fu_573_p1);

always @ (posedge ap_clk) begin
    shl_ln_reg_1315[2:0] <= 3'b000;
    sub_ln214_reg_1320[0] <= 1'b0;
    feature_V_addr_reg_1328[0] <= 1'b0;
    feature_V_addr_reg_1328_pp0_iter1_reg[0] <= 1'b0;
    trunc_ln_reg_1333[2:0] <= 3'b000;
    feature_V_addr_1_reg_1363[0] <= 1'b1;
    feature_V_addr_1_reg_1363_pp0_iter1_reg[0] <= 1'b1;
    trunc_ln21_1_reg_1379[2:0] <= 3'b000;
    feature_V_addr_2_reg_1413[0] <= 1'b0;
    feature_V_addr_3_reg_1418[0] <= 1'b1;
    feature_V_addr_4_reg_1423[0] <= 1'b0;
    feature_V_addr_4_reg_1423_pp0_iter1_reg[0] <= 1'b0;
    feature_V_addr_5_reg_1428[0] <= 1'b1;
    feature_V_addr_5_reg_1428_pp0_iter1_reg[0] <= 1'b1;
    trunc_ln21_2_reg_1439[2:0] <= 3'b000;
end

endmodule //Conv
